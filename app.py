from aiogram import Router, types, F
from aiogram.filters import CommandStart
from aiogram.types import Message
import button as bt
router = Router()

#–∫–æ–º–∞–Ω–¥–∞ /start
@router.message(CommandStart())
async def start(message:Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç, —è –µ–º—É–ª—è—Ç–æ—Ä —Ç–µ—Ä–º–∞–ª—å–Ω–æ–≥–æ –ø—Ä–∏–Ω—Ç–µ—Ä—É", reply_markup=bt.main)
    

@router.message(F.text == "–§–∞–π–ª –æ—Å—Ç–∞–Ω–Ω—å–æ–≥–æ —á–µ–∫—É")
async def get_file(message:Message):
    file_path = "printer_checks.txt"   # —à–ª—è—Ö –¥–æ —Ñ–∞–π–ª—É
    try:
        await message.answer_document(types.FSInputFile(file_path), reply_markup=bt.main)
    except Exception as e:
        await message.answer(f"‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –≤—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ —Ñ–∞–π–ª: {e}")
        
@router.message(F.text == "–û—Å—Ç–∞–Ω–Ω—ñ–π —á–µ–∫")
async def get_file(message:Message):
    with open("printer_checks.txt", "r", encoding='utf-8') as f:
                last_check = f.read()
    await message.answer(f"üñ® –û—Å—Ç–∞–Ω–Ω—ñ–π —á–µ–∫:\n\n```\n{last_check}\n```", parse_mode="Markdown", reply_markup=bt.main)




